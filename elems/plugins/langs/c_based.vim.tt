" ─────────────────────────────────────────────────────────────────────────────┐
"
" Name:    c_base.vim.tt
" Summary: %TODO%
" Authors:
"   - Nicolas Farabegoli <nicolas.farabegoli@gmail.com> (nicolasfara)
"
" Project:
"   - Homepage:        https://github.com/nicolasfara/
"   - Getting started: see README.md in the project root folder
"
" License: Apache v2.0 (see below)
"
" ─────────────────────────────────────────────────────────────────────────────┤
"
" Copyright  2018
"
" Licensed under the Apache License, Version 2.0 (the "License");
" you may not use this file except in compliance with the License.
" You may obtain a copy of the License at
"
" http://www.apache.org/licenses/LICENSE-2.0
"
" Unless required by applicable law or agreed to in writing, software
" distributed under the License is distributed on an "AS IS" BASIS,
" WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
" or implied. See the License for the specific language governing
" permissions and limitations under the License.
"
" ─────────────────────────────────────────────────────────────────────────────┘


" ────────────────────────────────────────────────────────────────── Declare ──┐
function! plugins#langs#c_based#declare() abort
  Plug 'Rip-Rip/clang_complete', {'do': 'make install'}
endfunction
" ─────────────────────────────────────────────────────────────────────────────┘

" ──────────────────────────────────────────────────────────────── Configure ──┐

function! plugins#langs#c_based#configure() abort
  " ─────────────────────────────────────────── `clang_complete` ← Configure ──┤
  " Disable autocomplete using clang_complete because neocomplete will be used.
  let g:clang_complete_auto = 0
  " Disable autoselect of the first element.
  let g:clang_auto_select = 0
  " Disable `omnicppcomplete` compatibility mode.
  let g:clang_omnicppcomplete_compliance=0
  " Enable snippets.
  let g:clang_snippets = 1
  " Instead of calling the clang/clang++ tool use libclang directly. This gives
  " access to many more clang features. Furthermore it automatically caches all
  " includes in memory.
  " Updates after changes in the same file will therefore be a lot faster.
  let g:clang_use_library=1
  " "let g:clang_library_path='/usr/lib64/llvm/5/lib64/'
  " ─────────────────────────────────────────────────────── Fold ← Configure ──┤
  autocmd FileType c      setlocal foldmethod=syntax
  autocmd FileType cpp    setlocal foldmethod=syntax
  autocmd FileType objc   setlocal foldmethod=syntax
  autocmd FileType objcpp setlocal foldmethod=syntax
  " ──────────────────────────────────────────────────── Hotkeys ← Configure ──┤
  " Disable default keymapping.
  let g:clang_make_default_keymappings=0
endfunction
" ─────────────────────────────────────────────────────────────────────────────┘


" vim: set filetype=eruby.vim :
